<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        //9Jr///Rqv//z6j//85nf//N5n//zKU//8wj///FYH/4QAAAAAAAAAAVrD+4VW6//9Ksv//TLT//0+1
        //9SuP//Ubf//0+1//9Ns///SK7//0Ko//86nf//MZP//xaB/+EAAAAAAAAAAFmy/uFbwP//TbX//1O3
        //9SuP//Vrz//1S6//9SuP//Ubf//0+1//9Lsv//RKn//zaY//8ch//hAAAAAAAAAABas/7hYsT//1C5
        //9Xvf//U7n//1a8//9XvP//V7z//1W6//9QtP//TbP//0qw//88of//IYz/4QAAAAAAAAAAWrL+4WjJ
        //9SvP//Wr7//1i+//9Yvv//Wb///1m///9Yvv//VLr//1C2//9Lsf//QKb//yKS/+EAAAAAAAAAAFyz
        /uFvz///VL7//13B//9ZvP//WLz//1i+//9Zvv//Wb7//1u9//9Vu///Vbv//0et//8ekv/hAAAAAAAA
        AABctP7hdtH//1a9//9gz///Z+H//2ni//9g4v//X+L//1/i//9h5f//ZdP//2bG//9Ns///GZH/4QAA
        AAAAAAAAXrX+4XvU//9gz///XMDn/yhog/8qao3/KW+X/ydwm/8lbZf/KnOZ/0i48P9Iyv//Q6///xmQ
        /+EAAAAAAAAAAGC2/uR+2v//R9H//3mSn/+iemj/lomB/5mGfP+YiH7/m42D/6qEa/8xX4b/LrP//0Wr
        //8hjffkAAAAAAAAAABcsv6qktn//13L//+hu8z////z//L29///////+vj5//n6/P///PH/SHWY/zCY
        9/9Cov//IonvqgAAAAAAAAAASqj+AVGs/0tLr/9NoLvYN//x4cv/////vr6+/9nZ2f//////9evfy0B8
        tDcXhPNNIo34SxmF7wEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6+7w0bq6uv/T0tL/7u7u0QAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACysrLarKys2gAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAQAAgAEAAIABAACAAQAAgAEAAIABAACAAQAAgAEAAIAB
        AACAAQAAgAEAAIABAACAAQAAgAEAAPw/AAD+fwAA
</value>
  </data>
</root>