<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>